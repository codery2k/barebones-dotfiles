#!/usr/bin/env bash

# Check if executable exists
is_executable() {
  type "$1" > /dev/null 2>&1
}

# Add to path
prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}

# Switch long/short prompt
ps0() {
  unset PROMPT_COMMAND
  PS1='$ '
}
ps1() {
  source "$DOTFILES_DIR"/.prompt
}

if [ "$(uname)" == "Darwin" ]; then #macOS
    source "$DOTFILES_DIR/functions_macos";
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then #Linux
    source "$DOTFILES_DIR/functions_linux";
fi

# Downlaod a wallpaper from unsplash and rename it 
get_and_save_wallpaper () {
  set_resolution
  wget --trust-server-names -P ${WALLPAPER_DIR} -q "https://source.unsplash.com/featured/${display_resolution}?wallpaper/$RANDOM"
  rename_wallpaper
}

# Fix common issues with random_unsplash_wallpaper
fix_random_unsplash_wallpaper(){
    if [ ! -d ${WALLPAPER_DIR} ]; then 
        echo ${WALLPAPER_DIR}
        mkdir -p ${wallpaper_dir}
    fi
}

# Rename wallpaper downloaded from Unsplash Source API. wget returns a filename with query parameters, this functions strips these query params
rename_wallpaper(){
  current_name=$(ls -t ${WALLPAPER_DIR} | head -n 1)
  split_name="$(cut -d'?' -f1 <<<${current_name})"
  filename=${split_name}".jpg"
  mv ${WALLPAPER_DIR}/${current_name} ${WALLPAPER_DIR}/${filename}
}

# random_unsplash_wallpaper
ruw (){
    $(get_and_save_wallpaper)
    img_name=$(ls -t ${WALLPAPER_DIR} | head -n 1)
    $(set_wallpaper) 
}

# random_saved_wallpaper
rsw () {
    img_name=$(ls ${WALLPAPER_DIR} | sort -R | tail -n 1)
    echo ${WALLPAPER_DIR}/${img_name}
    $(set_wallpaper)
}

# delete_unsplash_wallpaper
duw () {
  img_name=$(ls -t ${WALLPAPER_DIR} | head -n 1)
  rm -rf ${WALLPAPER_DIR}/${img_name} 
}

# thefuck
eval $(thefuck --alias)
